image: gradle:alpine

variables: 
    GRADLE_OPTS: "-Dorg.gradle.daemon=false" 
    DOCKER_IMAGE: getawaygo_backend

stages: 
    - build 
    - test 
    - sonarqube
    - dockerize
    - deploy


build: 
    stage: build 
    script: 
     - cd GetawayGo_Backend\GetawayGo_Backend
     - .\gradlew assemble 
            
test: 
    stage: test 
    script: 
     - cd GetawayGo_Backend\GetawayGo_Backend
     - .\gradlew test

sonarqube-check:
    image: gradle:jre11-slim
    variables:
        SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
        GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    cache:
        key: "${CI_JOB_NAME}"
        paths:
            - .sonar\cache
    stage: sonarqube
    script:
    - cd GetawayGo_Backend\GetawayGo_Backend 
    - .\gradlew sonarqube
    allow_failure: true
    only:
    - main # or the name of your main branch

dockerize:
    stage: dockerize
    script: 
        - cd GetawayGo_Backend\GetawayGo_Backend 
        - ./gradlew clean assemble
        - docker build -t $DOCKER_IMAGE .
    only:
        - main

deploy:
    stage: deploy
    script:
        - docker start getawaygo_database
        - docker stop getawaygo_backend
        - docker rm getawaygo_backend
        - docker run -d -p 8080:8080 --net=getawaygo_backend --env spring_profiles_active=staging --name=getawaygo_backend $DOCKER_IMAGE
    only:
        - main 

